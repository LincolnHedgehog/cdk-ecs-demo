{
  "Resources": {
    "TaskDefTaskRole1EDB4A67": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ecs-tasks.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/TaskDef/TaskRole/Resource"
      }
    },
    "TaskDef54694570": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      4,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::ImportValue": "CodePipelineStack:ExportsOutputFnGetAttEcrRepoBB83A592ArnB6C43A7E"
                          }
                        ]
                      }
                    ]
                  },
                  ".dkr.ecr.",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::ImportValue": "CodePipelineStack:ExportsOutputFnGetAttEcrRepoBB83A592ArnB6C43A7E"
                          }
                        ]
                      }
                    ]
                  },
                  ".amazonaws.com/",
                  {
                    "Fn::ImportValue": "CodePipelineStack:ExportsOutputRefEcrRepoBB83A592FA170EC2"
                  },
                  ":",
                  {
                    "Ref": "TaskDefWebServerPipelineParam83ED9D1F"
                  }
                ]
              ]
            },
            "Links": [],
            "LinuxParameters": {
              "Capabilities": {
                "Add": [],
                "Drop": []
              },
              "Devices": [],
              "Tmpfs": []
            },
            "MountPoints": [],
            "Name": "WebServer",
            "PortMappings": [
              {
                "ContainerPort": 8000,
                "Protocol": "tcp"
              }
            ],
            "Ulimits": [],
            "VolumesFrom": []
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "TaskDefExecutionRoleB4775C97",
            "Arn"
          ]
        },
        "Family": "ProdHttpServiceStackTaskDefBDF915CE",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "TaskDefTaskRole1EDB4A67",
            "Arn"
          ]
        },
        "Volumes": []
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/TaskDef/Resource"
      }
    },
    "TaskDefExecutionRoleB4775C97": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ecs-tasks.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/TaskDef/ExecutionRole/Resource"
      }
    },
    "TaskDefExecutionRoleDefaultPolicy0DBB737A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": "CodePipelineStack:ExportsOutputFnGetAttEcrRepoBB83A592ArnB6C43A7E"
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TaskDefExecutionRoleDefaultPolicy0DBB737A",
        "Roles": [
          {
            "Ref": "TaskDefExecutionRoleB4775C97"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "ServiceD69D759B": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "TaskDefinition": {
          "Ref": "TaskDef54694570"
        },
        "Cluster": {
          "Fn::ImportValue": "ClusterStack:ExportsOutputRefClusterEB0386A796A0E3FE"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "WebServer",
            "ContainerPort": 8000,
            "TargetGroupArn": {
              "Ref": "LBHttpListenerDefaultTargetGroupDB46F3FD"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Fn::ImportValue": "ClusterStack:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940"
              },
              {
                "Fn::ImportValue": "ClusterStack:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3"
              }
            ]
          }
        },
        "ServiceRegistries": []
      },
      "DependsOn": [
        "LBHttpListenerDefaultTargetGroupDB46F3FD",
        "LBHttpListenerA225B711"
      ],
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/Service/Service"
      }
    },
    "ServiceSecurityGroupC96ED6A7": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ProdHttpServiceStack/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [],
        "VpcId": {
          "Fn::ImportValue": "ClusterStack:ExportsOutputRefVpc8378EB38272D6E3A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/Service/SecurityGroup/Resource"
      }
    },
    "ServiceSecurityGroupfromProdHttpServiceStackLBSecurityGroupB0268CBC8000FC4E4F1F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 8000,
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupC96ED6A7",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "ToPort": 8000
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/Service/SecurityGroup/from ProdHttpServiceStackLBSecurityGroupB0268CBC:8000"
      }
    },
    "LB8A12904C": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LBSecurityGroup8A41EA2B",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Fn::ImportValue": "ClusterStack:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
          },
          {
            "Fn::ImportValue": "ClusterStack:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
          }
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/LB/Resource"
      }
    },
    "LBSecurityGroup8A41EA2B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB ProdHttpServiceStackLBF347D9F5",
        "SecurityGroupEgress": [],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "ClusterStack:ExportsOutputRefVpc8378EB38272D6E3A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/LB/SecurityGroup/Resource"
      }
    },
    "LBSecurityGrouptoProdHttpServiceStackServiceSecurityGroupCB926B3B800062BE9A90": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupC96ED6A7",
            "GroupId"
          ]
        },
        "FromPort": 8000,
        "ToPort": 8000
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/LB/SecurityGroup/to ProdHttpServiceStackServiceSecurityGroupCB926B3B:8000"
      }
    },
    "LBHttpListenerA225B711": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "LBHttpListenerDefaultTargetGroupDB46F3FD"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LB8A12904C"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "Certificates": []
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/LB/HttpListener/Resource"
      }
    },
    "LBHttpListenerDefaultTargetGroupDB46F3FD": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 8000,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [],
        "Targets": [],
        "TargetType": "ip",
        "VpcId": {
          "Fn::ImportValue": "ClusterStack:ExportsOutputRefVpc8378EB38272D6E3A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ProdHttpServiceStack/LB/HttpListener/DefaultTargetGroup/Resource"
      }
    }
  },
  "Parameters": {
    "TaskDefWebServerPipelineParam83ED9D1F": {
      "Type": "String"
    }
  },
  "Outputs": {
    "LoadBalancerDNS": {
      "Value": {
        "Fn::GetAtt": [
          "LB8A12904C",
          "DNSName"
        ]
      }
    }
  }
}